services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - user-manager-network

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
      - loki
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - user-manager-network

  loki:
    image: grafana/loki:2.9.3
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - user-manager-network
    restart: unless-stopped
    # Healthcheck pour s'assurer que Loki est opérationnel
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider http://localhost:3100/ready || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  promtail:
    image: grafana/promtail:2.9.3
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - ./logs:/logs:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - user-manager-network
    depends_on:
      - loki
    restart: unless-stopped

networks:
  user-manager-network:
    external: true  # Utilise le réseau existant de votre application

volumes:
  grafana-storage:
  loki-data: